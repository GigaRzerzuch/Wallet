@inject ICoinService CoinService
@inject ITradeService TradeService
@inject NavigationManager NavigationManager
@attribute [Authorize]

@if (CoinService.CoinList.Count > 0)
{
    <div class="row bg-dark rounded-2 mb-4 text-light">
        <h2 class="col-sm-6 text-center">Sum: @totalCurrentSum.ToString("0.##") $</h2>
        <h2 class="col-sm-6 text-center">Profit: @totalProfit.ToString("0.##") %</h2>
    </div>
    <div>
        <table class="table">
            <tr class="heavy toprow">
                <td>
                    Crypto
                </td>
                <td>
                    Name
                </td>
                <td>
                    Amount
                </td>
                <td>
                    Current Price
                </td>
                <td>
                    Average Buy Price
                </td>
                <td>
                    Sum
                </td>
                <td>
                    Profit
                </td>
            </tr>
            @foreach (var coin in CoinService.CoinList)
            {
                <tr @onclick="() => GoToCoin(coin)">
                    <td>
                        @foreach (CoinName coinName in CoinName.GetValues(typeof(CoinName)))
                        {
                            if (coin.Name == coinName)
                            {
                                <img src="@GetIconPath(coin.Name.ToString())" />
                            }
                        }
                    </td>
                    <td>
                        @coin.Name
                    </td>
                    <td>
                        @coin.Amount.ToString("0.##")
                    </td>
                    <td>
                        @if (coin.CurrentPrice == 0)
                        {
                            <span>Loading price...</span>
                        }
                        else
                        {
                            <span>@coin.CurrentPrice.ToString("0.##") $ </span>
                        }
                    </td>
                    <td>
                        @coin.BuyPrice.ToString("0.##") $
                    </td>
                    <td>
                        @coin.Sum.ToString("0.##") $
                    </td>
                    <td>
                        @coin.Course.ToString("0.##") %
                    </td>
                </tr>
            }
        </table>
    </div>

}
else
{
    <span>Loading Coins...</span>
}

@code {
    double totalCurrentSum;
    double totalProfit;
    double totalBuySum;

    protected override async Task OnInitializedAsync()
    {
        await CoinService.GetAllCoinsAsync();

        totalProfit = 0;
        totalCurrentSum = 0;
        totalBuySum = 0;

        foreach (Coin coin in CoinService.CoinList)
        {
            totalCurrentSum += coin.Sum;
            totalBuySum += coin.Amount * coin.BuyPrice;
        }

        totalProfit = ((totalCurrentSum - totalBuySum) / totalBuySum)*100;
    }

    string GetIconPath(string name)
    {
        string path = "icons/" + name + ".png";
        return path;
    }

    void GoToCoin(Coin coin)
    {
        CoinService.ChoosenCoin = coin;
        TradeService.PartialTradeList = TradeService.Trades.Where(trade => trade.Name == coin.Name).ToList();
        NavigationManager.NavigateTo("/coinsummary");
    }
}
