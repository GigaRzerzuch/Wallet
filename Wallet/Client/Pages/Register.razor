@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<h3>Register</h3>

<EditForm Model="userRegister" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label>User Name</label>
        <InputText id="name" @bind-Value="userRegister.UserName" class="form-control"></InputText>
        <ValidationMessage For="@(()=>userRegister.UserName)" />
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText id="email" @bind-Value="userRegister.Email" class="form-control"></InputText>
        <ValidationMessage For="@(()=>userRegister.Email)" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText id="password" @bind-Value="userRegister.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(()=>userRegister.Password)" />
    </div>
    <div class="form-group">
        <label>Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="userRegister.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(()=>userRegister.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary mt-2">Register</button>
</EditForm>



@code {
    UserRegister userRegister = new UserRegister();

    private async Task RegisterUser()
    { 
        var result = await AuthService.Register(userRegister);
        if (result.Succes)
        {
            ToastService.ShowSuccess(result.Message);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
    }
}
